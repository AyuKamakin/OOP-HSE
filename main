#include <iostream>
#include <cstring>
#include <cassert>
using namespace std;
//#include "Package.cpp"
#include "Package.h"
#include "List.h"

#define DEBUG 2
#define incorrectNum1 10000
#define incorrectNum2 -100
#define correctNum1 10
#define correctNum2 99
#define correctNum3 50
#define correctNum4 75
#define correctName1 "box"
#define correctName2 "fridge"
#define incorrectName "aaaaaaaaaaaar"
void printList(const int len, node* first){
    if(len != 0){
        node * temp = first;
        int i=1;
        while(temp->next != 0){
            cout <<"num "<<i<<": "<< temp->data.getName() << ", size "<<
                 temp->data.getSize()<< ", price "<<temp->data.getPrice()<< ", value "<<temp->data.getValue()<<endl;
            temp = temp->next;
            i++;
        }
        cout <<"num "<<i<<": "<< temp->data.getName() << ", size "<<
             temp->data.getSize()<< ", price "<<temp->data.getPrice()<< ", value "<<temp->data.getValue()<<endl;
    }
}
int main(){
//тест стандартного консруктора и методов получения параметров класса Package
#if DEBUG==1
    Package test=Package(correctName1, incorrectNum1,correctNum1);
    assert(test.getSize()==0);
    assert(!strcmp(test.getName(),correctName1));
    assert(test.getPrice()==correctNum1);
    test.setInfo(correctName2, correctNum2, incorrectNum2);
    assert(test.getSize()==correctNum2);
    assert(!strcmp(test.getName(),correctName2));
    assert(test.getPrice()==0);
    //методы изменения параметров
    test.setSize(correctNum3);
    assert(test.getSize()==correctNum3);
    test.setPrice(correctNum4);
    assert(test.getPrice()==correctNum4);
    //конструктор копирования
    Package test2=Package(test);
    assert(test.getSize()==test2.getSize());
    assert(!strcmp(test.getName(),test2.getName()));
    assert(test.getPrice()==test2.getPrice());
    //конструктор по умолчанию
    Package test3=Package();
    assert(test3.getSize()==0);
    assert(!strcmp(test3.getName(),""));
    assert(test3.getPrice()==0);
    test3.setName(incorrectName);
    assert(!strcmp(test3.getName(),""));
#endif
#if DEBUG==2
    Package two = Package("two", 10, 2);
    Package five = Package("five", 10, 5);
    Package three = Package("three", 10, 3);
    Package one = Package("one", 10, 1);
    Package four = Package("four", 10, 4);
    Package six = Package("six", 10, 6);
    List list=List();
    list.InsertWSort(four);
    list.InsertWSort(one);
    list.InsertWSort(five);
    list.InsertWSort(two);

    list.Print();
    List list2=List(list);
    cout<<endl;
    printList(list.GetLen(),list.GetElem(1));
    list.Destruction();
#endif
}
