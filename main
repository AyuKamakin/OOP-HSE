#include <iostream>
#include <cstring>
#include <cassert>
using namespace std;
//#include "Package.cpp"
#include "Package.h"
#include "List.h"

#define DEBUG 2
#define incorrectNum1 10000
#define incorrectNum2 -100
#define correctNum1 10
#define correctNum2 99
#define correctNum3 50
#define correctNum4 75
#define correctName1 "box"
#define correctName2 "fridge"
#define incorrectName "aaaaaaaaaaaar"

int main(){
//тест стандартного консруктора и методов получения параметров класса Package
#if DEBUG==1
    Package test=Package(correctName1, incorrectNum1,correctNum1);
    assert(test.getSize()==0);
    assert(!strcmp(test.getName(),correctName1));
    assert(test.getPrice()==correctNum1);
    test.setInfo(correctName2, correctNum2, incorrectNum2);
    assert(test.getSize()==correctNum2);
    assert(!strcmp(test.getName(),correctName2));
    assert(test.getPrice()==0);
    //методы изменения параметров
    test.setSize(correctNum3);
    assert(test.getSize()==correctNum3);
    test.setPrice(correctNum4);
    assert(test.getPrice()==correctNum4);
    //конструктор копирования
    Package test2=Package(test);
    assert(test.getSize()==test2.getSize());
    assert(!strcmp(test.getName(),test2.getName()));
    assert(test.getPrice()==test2.getPrice());
    //конструктор по умолчанию
    Package test3=Package();
    assert(test3.getSize()==0);
    assert(!strcmp(test3.getName(),""));
    assert(test3.getPrice()==0);
    test3.setName(incorrectName);
    assert(!strcmp(test3.getName(),""));
#endif
#if DEBUG==2
    Package test1 = Package("two", 2, 8);
    Package test2 = Package("five", 10, 1);
    Package test3 = Package("three", 3, 6);
    Package test4 = Package("one", 100, 4);
    Package test5 = Package("four", 1, 2);
    List list=List();
    list.InsertWSort(test3);
    list.InsertWSort(test4);
    list.InsertWSort(test1);
    list.InsertWSort(test2);
    list.InsertWSort(test5);
    list.Print(5);
#endif
}
