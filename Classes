#include <iostream>
#include <cstring>
#define DEBUG 0
using namespace std;

class Package
{
    float price;
    float size;
    char *name = nullptr;
public:
    //конструкторы по умолчанию
    Package()
    {
        price=0;
        size=0;
    }
    Package(const char* newName, const float& newSize, const float& newPrice)
    {
        name = strdup(newName);
        size = newSize;
        price=newPrice;
    }
    Package(const char* newName, const float& newSize)
    {
        name = strdup(newName);
        size = newSize;
        price=0;
    }
    Package(const char* newName)
    {
        name = strdup(newName);
        price = 1;
        size=1;
    }
    //конструктор копирования
    Package(const Package &ref)
    {
        name = ref.name;
        price = ref.price;
        size =ref.size;
    }
    //деструктор
    ~Package(){
    delete[] name;
#if DEBUG==1
        cout<<"called destructor for "<<name<<endl;
#endif
    }
    // методы класса
    const void setInfo(const char* newName, const float& newSize, const float& newPrice)
    {
        name = strdup(newName);
        size = newSize;
        price=newPrice;
    }
    const void setName(const char* newName){ name = strdup(newName); }
    const void setSize(const float& newSize){ size = newSize; }
    const void setPrice(const float& newPrice){ price =newPrice; }

    const char* getName() {
        if(name!=NULL)return name;
    }
    const float& getSize() const { if(size!=0)return size;}
    const float& getPrice() const {if(price!=0) return price;}
};
int main(){
    Package test=Package();
    cout<<"created ";
    //cout << test.getName() << endl;
    cout << test.getSize() << endl;
    test.setInfo("cherries", 1 , 2);
    cout <<"size: "<< test.getSize() <<" name: "<< test.getName()<<" price: "<<test.getPrice()<<endl;
    //test.~Package();
    return 0;
}
